---
- name: Ensure apt cache is up to date
  ansible.builtin.apt:
    update_cache: true

- name: Install pip
  ansible.builtin.apt:
    name: python3-pip
    state: present
  become: true

- name: Install MySQL Python package
  ansible.builtin.pip:
    name: PyMySQL
    state: present
  become: true

- name: Install Icinga2 and Nagios Monitoring Plugins
  block:
    - name: Add the GPG key of Icinga2
      ansible.builtin.apt_key:
        url: https://packages.icinga.com/icinga.key
      become: true

    - name: Ensure the /etc/apt/sources.list.d directory exists
      ansible.builtin.file:
        path: /etc/apt/sources.list.d
        state: directory
        mode: "0755"

    - name: Create icinga-focal.list with repository configuration
      ansible.builtin.copy:
        dest: /etc/apt/sources.list.d/icinga-focal.list
        content: |
          deb http://packages.icinga.com/ubuntu icinga-focal main
          deb-src http://packages.icinga.com/ubuntu icinga-focal main
        mode: "0644"

    - name: Update the package list
      ansible.builtin.apt:
        update_cache: true

    - name: Install Icinga2 and monitoring plugins
      ansible.builtin.apt:
        name:
          - icinga2
          - monitoring-plugins
          - monitoring-plugins-standard
          - nagios-plugins-contrib
        state: present

    - name: Start Icinga2 service
      ansible.builtin.systemd:
        name: icinga2
        state: started

    - name: Enable Icinga2 service to start on boot
      ansible.builtin.systemd:
        name: icinga2
        enabled: true

- name: Install and Configure MySQL Database Server
  block:
    - name: Install MySQL Server
      ansible.builtin.apt:
        name:
          - mysql-server
          - mysql-client
        state: present

    - name: Start MySQL Service
      ansible.builtin.systemd:
        name: mysql
        state: started

    - name: Enable MySQL Service to start on boot
      ansible.builtin.systemd:
        name: mysql
        enabled: true

    # mysql_secure_installation
    - name: Mysql Secure Installation
      become: true
      ansible.builtin.expect:
        command: mysql_secure_installation
        responses:
          "Enter current password for root": ""
          "Set root password": "{{ mysql_root_password }}"
          "Remove anonymous users": "y"
          "Disallow root login remotely": "n"
          "Remove test database": "y"
          "Reload privilege tables now": "y"
        timeout: 1
      register: secure_mariadb
      failed_when: "'... Failed!' in secure_mariadb.stdout_lines"

- name: Install and Configure Icinga2 MySQL Module
  ansible.builtin.import_tasks: ido-mysql.yml

- name: Install and Configure InfluxDB
  ansible.builtin.import_tasks: influxdb.yml

- name: Install Apache2 and PHP Packages
  block:
    - name: Install software-properties-common
      apt:
        name: software-properties-common
        state: present
        update_cache: true

    - name: Add PHP repository
      ansible.builtin.apt_repository:
        repo: ppa:ondrej/php
        state: present

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true

    - name: Install Apache2 and PHP packages
      ansible.builtin.apt:
        name:
          - apache2
          - php8.1
          - php8.1-common
          - php8.1-gd
          - php8.1-ldap
          - php8.1-intl
          - php8.1-curl
          - libapache2-mod-php8.1
          - php8.1-mysql
          - php8.1-pgsql
          - php8.1-xml
          - php8.1-mbstring
        state: present

    - name: Configure PHP timezone
      ansible.builtin.lineinfile:
        path: /etc/php/8.1/apache2/php.ini
        regexp: "^;?date.timezone ="
        line: "date.timezone = Asia/Ho_Chi_Minh"

    - name: Configure cgi.fix_pathinfo
      ansible.builtin.lineinfile:
        path: /etc/php/8.1/apache2/php.ini
        regexp: "^;?cgi.fix_pathinfo="
        line: "cgi.fix_pathinfo=0"

    - name: Start and enable Apache service
      ansible.builtin.systemd:
        name: apache2
        state: restarted
        enabled: true

- name: Install Icinga Web 2
  ansible.builtin.import_tasks: icingaweb2.yml

- name: Chance ownership and permissions
  block:
    - name: Chance ownership of /etc/icingaweb2
      ansible.builtin.file:
        path: /etc/icingaweb2
        owner: www-data
        group: www-data
        recurse: true

    - name: Chance permissions of /etc/icingaweb2
      ansible.builtin.file:
        path: /etc/icingaweb2
        mode: "0775"
        recurse: true

    - name: Change ownership of /usr/share/icingaweb2
      ansible.builtin.file:
        path: /etc/icingaweb2/setup.token
        owner: www-data
        group: www-data

    - name: Chance permissions of /etc/icingaweb2
      ansible.builtin.file:
        path: /etc/icingaweb2/setup.token
        mode: "644"
        recurse: true

    - name: Change ownership of /var/lib/icingaweb2
      ansible.builtin.file:
        path: /var/lib/icingaweb2
        owner: www-data
        group: www-data
        recurse: true

    - name: Set permissions for /var/lib/icingaweb2
      ansible.builtin.file:
        path: /var/lib/icingaweb2
        mode: "0755"
        recurse: true

    - name: Ensure the directory exists for the icinga2 command file
      file:
        path: /var/run/icinga2/cmd
        state: directory
        owner: root
        group: root
        mode: "0755"

    - name: Create icinga2.cmd file
      file:
        path: /var/run/icinga2/cmd/icinga2.cmd
        state: touch
        owner: www-data
        group: www-data
        mode: "0664"

    - name: Set correct permissions for icinga2.cmd file
      file:
        path: /var/run/icinga2/cmd/icinga2.cmd
        owner: www-data
        group: www-data
        mode: "0664"

- name: Generate Icinga Web 2 setup token
  block:
    - name: Generate Icinga Web 2 setup token
      ansible.builtin.command:
        cmd: icingacli setup token create
      register: icinga_token
      changed_when: false

    - name: Display Icinga Web 2 setup token
      ansible.builtin.debug:
        msg: "The newly generated setup token is: {{ icinga_token.stdout }}"
